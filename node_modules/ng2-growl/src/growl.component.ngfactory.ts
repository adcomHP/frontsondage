/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../src/growl.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../src/growl.service';
import * as import10 from '@angular/common/src/directives/ng_class';
import * as import11 from '../node_modules/@angular/common/src/directives/ng_class.ngfactory';
import * as import12 from '@angular/core/src/linker/view_container';
import * as import13 from '@angular/core/src/change_detection/change_detection_util';
import * as import14 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import15 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/common/src/directives/ng_for';
import * as import19 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
export class Wrapper_GrowlComponent {
  /*private*/ _eventHandler:Function;
  context:import0.GrowlComponent;
  /*private*/ _changed:boolean;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.GrowlComponent(p0);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_GrowlComponent_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.GrowlComponent],import0.GrowlComponent,{})];
var renderType_GrowlComponent_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_GrowlComponent_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.GrowlComponent>;
  _GrowlComponent_0_3:Wrapper_GrowlComponent;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_GrowlComponent_Host0,renderType_GrowlComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_GrowlComponent_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'ng2-growl',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_GrowlComponent0(this.viewUtils,this,0,this._el_0);
    this._GrowlComponent_0_3 = new Wrapper_GrowlComponent(this.injectorGet(import9.GrowlService,this.parentIndex));
    this.compView_0.create(this._GrowlComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._GrowlComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.GrowlComponent) && (0 === requestNodeIndex))) { return this._GrowlComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._GrowlComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const GrowlComponentNgFactory:import8.ComponentFactory<import0.GrowlComponent> = new import8.ComponentFactory<import0.GrowlComponent>('ng2-growl',View_GrowlComponent_Host0,import0.GrowlComponent);
const styles_GrowlComponent:any[] = [
  '@keyframes slideIn{0%{transform:translateX(100%)}100%{transform:translateX(0)}}',
  '@keyframes slideOut{0%{transform:translateX(0)}100%{transform:translateX(100%)}}',
  '[_nghost-%COMP%]{position:fixed;top:0;right:0;z-index:500}',
  '.message-container[_ngcontent-%COMP%]{transform-origin:top right;animation:.3s ease-out 0s 1 forwards slideIn;position:relative;padding:1rem;margin:.75rem 0;width:27rem;background-color:rgba(250,250,250,.9);border:.15rem solid #e8e8e8;border-radius:.5rem 0 0 .5rem;box-shadow:-.1rem .1rem .5rem #666}',
  '.message-container.closing[_ngcontent-%COMP%]{animation:.3s ease-out 0s 1 forwards slideOut}',
  '.message-container.error[_ngcontent-%COMP%]{border-left:.5rem solid #BC5543}',
  '.message-container.warn[_ngcontent-%COMP%]{border-left:.5rem solid #E7E232}',
  '.message-container.info[_ngcontent-%COMP%]{border-left:.5rem solid #146587}',
  '.message-container.success[_ngcontent-%COMP%]{border-left:.5rem solid #477529}',
  '.close[_ngcontent-%COMP%]{position:absolute;top:.5rem;right:.5rem;cursor:pointer;font-size:2rem;font-weight:700;line-height:0;padding:.5rem .2rem}',
  '.heading[_ngcontent-%COMP%]{display:block}'
]
;
const nodeDebugInfos_GrowlComponent1:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo([import10.NgClass],(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
class View_GrowlComponent1 extends import1.DebugAppView<any> {
  _el_0:any;
  _NgClass_0_3:import11.Wrapper_NgClass;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _text_10:any;
  _map_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import12.ViewContainer) {
    super(View_GrowlComponent1,renderType_GrowlComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_GrowlComponent1,declaredViewContainer);
    this._map_12 = import4.pureProxy1((p0:any):{[key: string]:any} => {
      return {closing: p0};
    });
    this._expr_13 = import13.UNINITIALIZED;
    this._expr_14 = import13.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.createRenderElement(this.renderer,(null as any),'div',import4.EMPTY_INLINE_ARRAY,this.debug(0,1,0));
    this._NgClass_0_3 = new import11.Wrapper_NgClass(this.parentView.injectorGet(import14.IterableDiffers,this.parentIndex),this.parentView.injectorGet(import15.KeyValueDiffers,this.parentIndex),new import16.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',this.debug(1,1,152));
    this._el_2 = import4.createRenderElement(this.renderer,this._el_0,'span',new import4.InlineArray2(2,'class','close'),this.debug(2,2,2));
    this._text_3 = this.renderer.createText(this._el_2,'Ã—',this.debug(3,2,43));
    this._text_4 = this.renderer.createText(this._el_0,'\n  ',this.debug(4,2,51));
    this._el_5 = import4.createRenderElement(this.renderer,this._el_0,'strong',new import4.InlineArray2(2,'class','heading'),this.debug(5,3,2));
    this._text_6 = this.renderer.createText(this._el_5,'',this.debug(6,3,26));
    this._text_7 = this.renderer.createText(this._el_0,'\n  ',this.debug(7,3,51));
    this._el_8 = import4.createRenderElement(this.renderer,this._el_0,'span',new import4.InlineArray2(2,'class','message'),this.debug(8,4,2));
    this._text_9 = this.renderer.createText(this._el_8,'',this.debug(9,4,24));
    this._text_10 = this.renderer.createText(this._el_0,'\n',this.debug(10,4,47));
    var disposable_0:Function = import4.subscribeToRenderElement(this,this._el_2,new import4.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_2));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._text_10
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 10)))) { return this._NgClass_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,1,5);
    const currVal_0_0_0:any = import4.inlineInterpolate(1,'message-container ',this.parentView.context.types[this.context.$implicit.type].toLowerCase(),'');
    this._NgClass_0_3.check_klass(currVal_0_0_0,throwOnChange,false);
    this.debug(0,1,116);
    const currVal_0_0_1:any = this._map_12(this.context.$implicit.closing);
    this._NgClass_0_3.check_ngClass(currVal_0_0_1,throwOnChange,false);
    this._NgClass_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.debug(6,3,26);
    const currVal_13:any = import4.inlineInterpolate(1,'',this.context.$implicit.heading,'');
    if (import4.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setText(this._text_6,currVal_13);
      this._expr_13 = currVal_13;
    }
    this.debug(9,4,24);
    const currVal_14:any = import4.inlineInterpolate(1,'',this.context.$implicit.message,'');
    if (import4.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setText(this._text_9,currVal_14);
      this._expr_14 = currVal_14;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_2(eventName:string,$event:any):boolean {
    this.debug(2,2,2);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.close(this.context.index)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_GrowlComponent0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo([
    import17.TemplateRef,
    import18.NgFor
  ]
  ,(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_GrowlComponent:import3.RenderComponentType = import4.createRenderComponentType('/Users/dfannin/Documents/projects/ng2-growl/src/growl.component.ts class GrowlComponent - inline template',0,import5.ViewEncapsulation.Emulated,styles_GrowlComponent,{});
export class View_GrowlComponent0 extends import1.DebugAppView<import0.GrowlComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _vc_1:import12.ViewContainer;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import19.Wrapper_NgFor;
  _text_2:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_GrowlComponent0,renderType_GrowlComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_GrowlComponent0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',this.debug(0,0,0));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(1,1,0));
    this._vc_1 = new import12.ViewContainer(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import17.TemplateRef_(this,1,this._anchor_1);
    this._NgFor_1_6 = new import19.Wrapper_NgFor(this._vc_1.vcRef,this._TemplateRef_1_5,this.parentView.injectorGet(import14.IterableDiffers,this.parentIndex),this.ref);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',this.debug(2,5,6));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import18.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,1,66);
    const currVal_1_0_0:any = this.context.growlItems;
    this._NgFor_1_6.check_ngForOf(currVal_1_0_0,throwOnChange,false);
    this._NgFor_1_6.ngDoCheck(this,this._anchor_1,throwOnChange);
    this._vc_1.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_1.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 1)) { return new View_GrowlComponent1(this.viewUtils,this,1,this._anchor_1,this._vc_1); }
    return (null as any);
  }
}